[["index.html", "Data science for biology Chapter 1 Introduction", " Data science for biology alena savachenko 2024-12-05 Chapter 1 Introduction This is a bookdown written in Markdown for educational purposes inside the course Data science for biology (TLSC-DSFB26V-20). This portfolio covers reproducible science, version control, sharing code and data in different ways, collaboration, database. Portfolio assignment starts with t CV. Portfolio assignment 1.1 CV Alena Savachenko Email: asava3**@gmail.com Phone: 06161781** Bitrix Developer I am a Bitrix developer with more than 3 years of experience with Bitrix, Wordpress, and Php. I'm motivated, result-focused and seeking a successful team-oriented company with opportunity to grow. Experience Grantmarketing https://www.grantmarketing.ru sales@grantmarketing.ru Jan 2019 - 2024 Bitrix developer marketing, content and design support for Bitrix based website Education Biology and Medical Laboratory Research Netherlans, Utrecht Sep 2022 - Dec 2024 Projects test link Project Java application Jira integrated Java Dashboard https://github.com/alenaSavachenko/dashboardApplicationOnSpringBoot Project Wordpress application https://github.com/alenaSavachenko/arena.km.ua-wp-thema Project Bitrix application Site of composite panels, Altek https://github.com/alenagrrr3/gravis_composit Skills Java PHP CSS HTML Languages English, German. "],["the-guerrilla-data_management-principles.html", "Chapter 2 The Guerrilla Data_management Principles 2.1 Portfolio assignment 1.2 Part 1 2.2 Portfolio assignment 1.2 Looking ahead. Package GenVisR 2.3 Planing for portfolio assignment 1.2 Looking ahead. Package GenVisR", " Chapter 2 The Guerrilla Data_management Principles 2.1 Portfolio assignment 1.2 Part 1 Looking ahead Answer the following questions: Where do I want to be in ~2 years time? How am I doing now with respect to this goal? What would be the next skill to learn? Plan to get a paid job in the Netherlands To do this I need to take the following steps: master the Dutch language, get a basic education. In my final year of education I plan to do an internship at inspection company NAK ( Randweg 14,Emmeloord). Presumably I will be doing work on detecting infection in potato seeds, using qPCR and data analyse of results. The current course TLSC-DSFB26V-20 is aimed at obtaining basic bio-medical and bioinformatics knowledge, which I need for your work position. What would be the next skill to learn -Genomic Data Visualization and Interpretation (Ensemble, UCSC, IGV) -Visualize mutation profile patterns (GenVisR) -Visualize the genomic characterization of disease and response to therapy results (GenVisR) -Matplotlib &amp; Seaborn PyData Make a planning on how to start learning this new skill. Note the following points: It has to be life sciences or useful for life sciences (no knitting, riding horses etc) It has to be data science / bioinformatics You have to show your plan in your portfolio, together with the result of the first few steps you took in trying to reach this goal. You probably won’t learn this skill in a few days. Just get started. This assignment will show us whether you succeeded in reaching an overview of the field and possibilities in data science for biology 2.2 Portfolio assignment 1.2 Looking ahead. Package GenVisR Visualizing genetic Mutations with GenVisr this is the first approach. The extended analyse follows. drawPlot(plotData) visualization cancerogenic gene PIK3CA g3Lollipop(mutation.dat, gene.symbol = mutation_gene_hugo, protein.change.col = &quot;amino_acid_change&quot;, btn.style = &quot;blue&quot;, # blue-style chart download buttons plot.options = plot.options, output.filename = &quot;customized_plot&quot;) ## Factor is set to Mutation_Class GenVisR is focused on supporting of genomic visualizations. The library waterfall of GenViSR answers the question what mutations are present in the sample. This type plot displays in a heatmap-like structure with rows and columns denotating genes and samples. The goal is to investigate Bioconductor package GenVisR and to apply it on a clinical dataset. The plan is to conduct deeper research on GenVisR, develop new data analysis techniques, and make contributions to the fields of mutational study in biology and medicine. Dataset supposed to come from Ensemble database 2.3 Planing for portfolio assignment 1.2 Looking ahead. Package GenVisR day 1 : general information and introduction , search for dataset day 2 and 3 : own implementation of pakcage on the chosen dataset day 4 : the repair of bugs and runing the application day 1,2,3 can be done at the free-lesson days day 4 can be done during the holiday "],["agile-collaboration.html", "Chapter 3 Agile collaboration", " Chapter 3 Agile collaboration github pages Execute the steps explained here (click) to setup a github-pages repository called myname-portfolio or something similar. NOTE: your github pages will be visible for everyone! Don’t put anything on there you do not want the world to see. Including but not restricted to: your address, e-mail etc, data you have no permission for, code you don’t want anyone to see (your teachers will still be able to see all code in your repo) Once you have successfully rendered your bookdown to a full website, hosting can be achieved by copying all html files to your Github-pages. The easiest way is to: set your repo to private add your teachers as collaborators on the repo clone your github pages repo copy all the html files rendered with bookdown to this folder commit and push all changes to your github pages repo. The website will be automatically updated after some time. Make sure your portfolio looks professional, and flex your Rmarkdown and analysis skills: it is meant to be used with future job applications! (Also, it is part of your grade) Put your portfolio on your github pages Links to github pages/repo : Portfolio source code Portfolio deployment Workflow source code Workflow deployment "],["data-managment-principles.html", "Chapter 4 Data managment principles", " Chapter 4 Data managment principles Applying the Guerrilla analytics framework to your own project. Look at your RStudio project that you created for the DAUR-II assignments download your folders (not the HUGE datafiles and kraken-database!) and rearrange your project according the Guerilla principles explained above for the data… folders: provide only a readme.txt with alle the info you would normally put there + where the data is stored Provide study documentation and meta data. Use the {fs} package to share a screenshot of your folder tree in your portfolio, look at: for more info on how to use the {fs} package. hint: you had 3 datasets within the RNAseq project, one of them being the exam project, and 2 datasets within the metagenomics project. Now clean up your work environment for this course (workflows) and the parallel course in DSFB2 (projecticum). Set up a folder structure that will accomodate future plans and collaboration on the projecticum. Provide readme-files or comments within the code where needed. For the projecticum folder, make sure you do this together with your lab partner. The portfolio directory: library(fs) fs::dir_tree(&quot;C:/Users/Mijn-PC/Documents/hu_courses/worfklow_ds_2&quot;) ## C:/Users/Mijn-PC/Documents/hu_courses/worfklow_ds_2 ## ├── 01-The_Guerrilla_Data_management_Principles.Rmd ## ├── 02-Agile_collaboration.Rmd ## ├── 03-Data-management-principles.Rmd ## ├── 04-Reproducible_Research.Rmd ## ├── 05-Reproducibility_part_1.Rmd ## ├── 06-Reproducible_Research_Part2.Rmd ## ├── assets ## │ ├── css ## │ ├── html ## │ └── img ## ├── data ## │ ├── les1 ## │ ├── les2 ## │ ├── les3 ## │ ├── les4 ## │ ├── les5 ## │ ├── les6 ## │ ├── les7 ## │ └── les8 ## ├── data-raw ## │ ├── BTN1A1_cov_chr6.V1.txt ## │ ├── MATZO_p_TCGAb40_SNP_1N_GenomeWideSNP_6_E09_667812.grch38.seg.v1.txt ## │ ├── MATZO_p_TCGAb40_SNP_1N_GenomeWideSNP_6_E09_667812.grch38.seg.v2.txt ## │ ├── MinionBenchmarkPaper.pdf ## │ ├── output_object_results_mart.csv ## │ └── SupplementaryFiles ## │ ├── media-1 (1).xlsx ## │ ├── media-2 (2).xlsx ## │ ├── media-3 (1).xlsx ## │ ├── media-4 (1).xlsx ## │ └── media-5 (1).xlsx ## ├── docs ## │ ├── 404.html ## │ ├── a-caucus-race-and-a-long-tale.html ## │ ├── bookdownproj_files ## │ │ └── figure-html ## │ │ └── draw_plot-1.png ## │ ├── index.html ## │ ├── libs ## │ │ ├── anchor-sections-1.1.0 ## │ │ │ ├── anchor-sections-hash.css ## │ │ │ ├── anchor-sections.css ## │ │ │ └── anchor-sections.js ## │ │ ├── gitbook-2.6.7 ## │ │ │ ├── css ## │ │ │ │ ├── fontawesome ## │ │ │ │ │ └── fontawesome-webfont.ttf ## │ │ │ │ ├── plugin-bookdown.css ## │ │ │ │ ├── plugin-clipboard.css ## │ │ │ │ ├── plugin-fontsettings.css ## │ │ │ │ ├── plugin-highlight.css ## │ │ │ │ ├── plugin-search.css ## │ │ │ │ ├── plugin-table.css ## │ │ │ │ └── style.css ## │ │ │ └── js ## │ │ │ ├── app.min.js ## │ │ │ ├── clipboard.min.js ## │ │ │ ├── jquery.highlight.js ## │ │ │ ├── lunr.js ## │ │ │ ├── plugin-bookdown.js ## │ │ │ ├── plugin-clipboard.js ## │ │ │ ├── plugin-fontsettings.js ## │ │ │ ├── plugin-search.js ## │ │ │ └── plugin-sharing.js ## │ │ ├── jquery-2.2.3 ## │ │ │ └── jquery.min.js ## │ │ └── jquery-3.6.0 ## │ │ └── jquery-3.6.0.min.js ## │ ├── reference-keys.txt ## │ ├── search_index.json ## │ ├── style.css ## │ ├── the-pool-of-tears.html ## │ └── timplementation-genvisr.html ## ├── index.Rmd ## ├── LICENSE ## ├── output ## │ ├── BTN1A1_cov_chr6.txt ## │ ├── BTN1A1_cov_chr6.V1.txt ## │ ├── counts_gene.txt ## │ ├── counts_transcript.txt ## │ ├── CPM_transcript.txt ## │ ├── extended_annotations.gtf ## │ ├── fullLengthCounts_transcript.txt ## │ ├── gencov.csv ## │ ├── gencov_BTN1A1.txt ## │ ├── myplot.pdf ## │ ├── output_brcaMAF.csv ## │ ├── output_BTN1A1.csv ## │ ├── output_BTN1A2.csv ## │ ├── output_d2.csv ## │ ├── output_getBM.csv ## │ ├── output_object_results_mart.csv ## │ └── uniqueCounts_transcript.txt ## ├── README.md ## ├── style.css ## ├── worflow_ds.Rproj ## ├── _bookdown.yml ## └── _output.yml The Daur-2 directory: fs::dir_tree(&quot;C:/Users/Mijn-PC/Documents/hu_courses/Daur2&quot;) ## C:/Users/Mijn-PC/Documents/hu_courses/Daur2 ## ├── Daur2.Rproj ## ├── README.md.txt ## ├── rnaseq_airway ## │ ├── airway_sampledata.csv ## │ ├── bam ## │ ├── counts ## │ ├── data ## │ ├── data_raw ## │ ├── fastq ## │ ├── fastqc_output ## │ ├── New folder ## │ └── readme_airway ## ├── rnaseq_ipsq ## │ ├── bam ## │ ├── counts ## │ ├── data ## │ ├── data_raw ## │ ├── fastq ## │ ├── fastq_output ## │ ├── ipsc_sampledata.csv ## │ └── readme_ipsc ## ├── rnaseq_onecut ## │ ├── bam ## │ ├── counts ## │ ├── data ## │ ├── data_raw ## │ ├── fastq ## │ ├── fastqc_output ## │ ├── onecut_sampledata.csv ## │ ├── onecut_sampledata_OC1.csv ## │ ├── onecut_sampledata_OC2.csv ## │ ├── onecut_sampledata_OC3.csv ## │ └── readme_onecut ## └── setwd.R The projecticum directory: fs::dir_tree(&quot;C:/Users/Mijn-PC/Documents/hu_courses/projecticum&quot;) ## C:/Users/Mijn-PC/Documents/hu_courses/projecticum ## ├── data ## │ └── README.md ## ├── data_raw ## ├── figures ## │ └── img ## │ └── logo.png ## ├── notebooks ## │ ├── dir_ls.R ## │ └── logs.txt ## ├── projecticum.Rproj ## ├── README.md ## ├── requirements.txt ## └── src ## └── package ## ├── MinionBenchmarkPaper.pdf ## └── SupplementaryFiles ## ├── media-1 (1).xlsx ## ├── media-2 (2).xlsx ## ├── media-3 (1).xlsx ## ├── media-4 (1).xlsx ## └── media-5 (1).xlsx The portfolio directory: fs::dir_tree(&quot;C:/Users/Mijn-PC/Documents/hu_courses/portfolio&quot;) ## C:/Users/Mijn-PC/Documents/hu_courses/portfolio ## ├── 01-The_Guerrilla_Data_management_Principles.Rmd ## ├── 02-Agile_collaboration.Rmd ## ├── 03-Data-management-principles.Rmd ## ├── 04-Reproducible_Research.Rmd ## ├── 05-Reproducibility_part_1.Rmd ## ├── 06-Reproducible_Research_Part2.Rmd ## ├── assets ## │ ├── css ## │ ├── html ## │ └── img ## ├── data ## ├── data-raw ## │ └── SupplementaryFiles ## │ ├── media-1 (1).xlsx ## │ ├── media-2 (2).xlsx ## │ ├── media-3 (1).xlsx ## │ ├── media-4 (1).xlsx ## │ └── media-5 (1).xlsx ## ├── docs ## │ ├── bookdownproj_files ## │ │ └── figure-html ## │ │ ├── draw_plot-1.png ## │ │ ├── plot_cortisol.png ## │ │ └── plot_gen_cov.png ## │ ├── index.html ## │ ├── libs ## │ │ └── gitbook-2.6.7 ## │ │ ├── css ## │ │ │ ├── fontawesome ## │ │ │ │ └── fontawesome-webfont.ttf ## │ │ │ ├── plugin-bookdown.css ## │ │ │ ├── plugin-clipboard.css ## │ │ │ ├── plugin-fontsettings.css ## │ │ │ ├── plugin-highlight.css ## │ │ │ ├── plugin-search.css ## │ │ │ ├── plugin-table.css ## │ │ │ └── style.css ## │ │ └── js ## │ │ ├── app.min.js ## │ │ ├── clipboard.min.js ## │ │ ├── jquery.highlight.js ## │ │ ├── lunr.js ## │ │ ├── plugin-bookdown.js ## │ │ ├── plugin-clipboard.js ## │ │ ├── plugin-fontsettings.js ## │ │ ├── plugin-search.js ## │ │ └── plugin-sharing.js ## │ ├── reference-keys.txt ## │ ├── search_index.json ## │ └── style.css ## ├── index.Rmd ## ├── LICENSE ## ├── output ## │ ├── BTN1A1_cov_chr6.txt ## │ ├── BTN1A1_cov_chr6.V1.txt ## │ ├── counts_gene.txt ## │ ├── counts_transcript.txt ## │ ├── CPM_transcript.txt ## │ ├── extended_annotations.gtf ## │ ├── fullLengthCounts_transcript.txt ## │ ├── gencov.csv ## │ ├── gencov_BTN1A1.txt ## │ ├── myplot.pdf ## │ ├── output_brcaMAF.csv ## │ ├── output_BTN1A1.csv ## │ ├── output_BTN1A2.csv ## │ ├── output_d2.csv ## │ ├── output_getBM.csv ## │ ├── output_object_results_mart.csv ## │ └── uniqueCounts_transcript.txt ## ├── portfolio.Rproj ## ├── README.md ## ├── style.css ## ├── _bookdown.yml ## └── _output.yml Include readme to the projecticum dataset "],["reproducible-research.html", "Chapter 5 Reproducible research", " Chapter 5 Reproducible research C. elegans plate experiment Open the file in R, using the {readxl} package. Inspect the data types of columns RawData, compName and compConcentration. What types would you expect from the experimental description above. Have the data types been correctly assigned during the importing of the data into R Inspect the data types of columns RawData, compName and compConcentration. What types would you expect from the experimental description above. Have the data types been correctly assigned during the importing of the data into R? library(&quot;readxl&quot;) library(&quot;tidyverse&quot;) file &lt;- read_excel(&quot;data/les3/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;) colnames(file) ## [1] &quot;plateRow&quot; &quot;plateColumn&quot; &quot;vialNr&quot; ## [4] &quot;dropCode&quot; &quot;expType&quot; &quot;expReplicate&quot; ## [7] &quot;expName&quot; &quot;expDate&quot; &quot;expResearcher&quot; ## [10] &quot;expTime&quot; &quot;expUnit&quot; &quot;expVolumeCounted&quot; ## [13] &quot;RawData&quot; &quot;compCASRN&quot; &quot;compName&quot; ## [16] &quot;compConcentration&quot; &quot;compUnit&quot; &quot;compDelivery&quot; ## [19] &quot;compVehicle&quot; &quot;elegansStrain&quot; &quot;elegansInput&quot; ## [22] &quot;bacterialStrain&quot; &quot;bacterialTreatment&quot; &quot;bacterialOD600&quot; ## [25] &quot;bacterialConcX&quot; &quot;bacterialVolume&quot; &quot;bacterialVolUnit&quot; ## [28] &quot;incubationVial&quot; &quot;incubationVolume&quot; &quot;incubationUnit&quot; ## [31] &quot;incubationMethod&quot; &quot;incubationRPM&quot; &quot;bubble&quot; ## [34] &quot;incubateTemperature&quot; head(file) ## # A tibble: 6 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;chr&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, ## # bacterialVolUnit &lt;chr&gt;, incubationVial &lt;chr&gt;, incubationVolume &lt;dbl&gt;, … Concentration column is a string, It needs to be converted to numeric file$compConcentration &lt;- as.numeric(file$compConcentration) ## Warning: NAs introduced by coercion Create a graph displaying a scatterplot for the CE.LIQ.FLOW.062_Tidydata.xlsx data, for the different compounds and the varying concentrations. Put the compConcentration on the x-axis, the DataRaw counts on the y-axis and assign a colour to each level in compName. Assign a different symbol (shape =) to each level in the expType variable. Try fixing the labels of the x-axis so that we can read them. When creating the plot under C), what happened with the ordering of the x-axis labels. Explain why this happens. Look at the data-type of the compConcentration column in the data again to find a clue. Correct this and than look at the graph again. Use a log10 transformation on the x-axis to get a clear graph. Also, add a bit of jitter to the points in the graph so that points are not overlapping (Google “ggplot jitter” if needed). ggplot(file, aes(x = compConcentration, y = RawData, colour=compName, shape=expType)) + geom_point()+ scale_x_continuous( trans= &#39;log10&#39;)+ ggtitle(&quot; Scatterplot for the C.Elegance experiment data&quot;) Fill in: (G) The positive control for this experiments is ….. (H) The negative control for this experiment is ….. Think about how you would analyze this experiment to learn whether there is indeed an effect of different concentrations on offspring count and whether the different compounds have a different curve (IC50). Write down you analysis as a step-wise plan. Normalize the data for the controlNegative in such a way that the mean value for controlNegative is exactly equal to 1 and that all other values are expressed as a fraction thereof. Rerun your graphs with the normalized data. Why would you want to take the step under J? compNamecontrolPositive&lt;- file$compName[file$expType == &quot;controlPositive&quot;][1] compNamecontrolNegative &lt;- file$compName[file$expType == &quot;controlNegative&quot;][1] The positive control for this experiments is Ethanol The negative control for this experiment is S-medium controlNegative &lt;- file$RawData[file$expType==&quot;controlNegative&quot;] controlNegative_scaled &lt;- scale(controlNegative, center = 1, scale = TRUE) controlNegative_scaled ## [,1] ## [1,] 1.0420913 ## [2,] 1.1451552 ## [3,] 1.2024130 ## [4,] 1.1795099 ## [5,] 1.0535428 ## [6,] 0.8245118 ## [7,] 1.0649944 ## [8,] 1.1795099 ## [9,] 0.8817695 ## [10,] 1.1680583 ## [11,] 0.7099962 ## [12,] 0.9619304 ## [13,] 0.6985447 ## [14,] 0.8474149 ## [15,] 0.9275757 ## [16,] 0.9962851 ## [17,] 0.9619304 ## [18,] 0.7558025 ## [19,] 0.7328994 ## [20,] 0.9161242 ## [21,] 0.9619304 ## [22,] 0.9390273 ## [23,] 0.8359633 ## [24,] 0.8474149 ## [25,] 0.9619304 ## [26,] 1.0764459 ## [27,] 1.1222521 ## [28,] 1.1337037 ## [29,] 1.1108006 ## [30,] 0.9275757 ## attr(,&quot;scaled:center&quot;) ## [1] 1 ## attr(,&quot;scaled:scale&quot;) ## [1] 87.32441 mean_controlNegatieve &lt;- round(mean(controlNegative_scaled)) mean_controlNegatieve ## [1] 1 mean scaled control Negatieve : 1 You would take this step to be able to analyse to analyze numerical values with different range of values and to be able to set them in one plot IC50 curve steps: Create a scatter plot of your data, with the x-axis representing the drug concentration and the y-axis representing the percentage of inhibition. Add a trendline to the scatter plot by right-clicking on a data point and selecting “Add Trendline.” In the Trendline options, select “Logarithmic” as the Trendline type. Check the box next to “Display Equation on the chart” and “Display R-squared value on chart.” The equation that appears on the chart represents the logarithmic curve that fits your data. Use this equation to calculate the IC50 value by solving for the x-value when the y-value equals 50%. To do this, set the equation equal to 50 and solve for x. You can use Excel’s solver function or simply trial-and-error to find the x-value that corresponds to a y-value of 50%. The x-value you find is the IC50 value for your drug. "],["reproducibility-issues-in-a-scientific-publication..html", "Chapter 6 Reproducibility issues in a scientific publication.", " Chapter 6 Reproducibility issues in a scientific publication. Open Peer Review scientific publication.Part1 PART 1 To complete part 1, execute activity A to G Initiate an empty RMarkdown file in your RStudio environment and provide author and title (after the title of this exercise) Search for a primary Open Access article on one of the above listed topics, using Pubmed Central Read the article diagonally (“blader het even door”) to check if is indeed a primary article describing emperical scientific findings. Include the reference to this article in your Rmd file Score the article on the basis of the above ‘Repita’ criteria Write an Rmarkdown report on your findings, including the table above and some information about the article such as general aim, short methods and results. If data is available, try including some Store the source Rmd and knitted HTML in a folder called ‘Rmd’ in your course RStudio project. You will need it again later in the course Reference to this article: https://pubmed.ncbi.nlm.nih.gov/38723404: General informtaion : Title: Altered coordination between sleep timing and cortisol profiles in night working female hospital employees Authors: Katarzyna Burek, Sylvia Rabstein, Thomas Kantermann, Céline Vetter Criteria for reproduciblity scores : Study Purpose: The purpose of this study is to measure the cortisol response in shift workers who work night shifts and to compare the cortisol level with non-shift workers. Binary : Yes Data Availability Statement: only part of data is available Binary : No Data Location: Found value: the part of processed data is present in the article as a part of table or graphs. There is no separately data-set available. Study Location Hospital Bergmannsheil Bochum, Germany Binary : Yes Found location : Hospital Bergmannsheil Bochum, Germany Author Review, Electronic address: Institute for Prevention and Occupational Medicine of the German Social Accident Insurance (IPA), Institute of the Ruhr-Universität Bochum, Bochum, Germany, Electronic address: katarzyna.burek@dguv.de. Found Value : Electronic address: katarzyna.burek@dguv.de Ethics Statement : data such as names and addresses of participants will not be published Binary : Yes Funding Statement: Our findings indicate altered cortisol profiles in female hospital employees on night shifts. Specifically, cortisol levels were lower at night when higher levels would typically be necessary for work activities, and higher at bedtime after a night shift, when levels should normally be low. Binary : Yes Code Availability: the code is not shared, but the visualization of code is included in the article Binary : No General aim, short methods and results Study of cortisol levels in different groups exposed to different experimental conditions, including day work, shift-work and night work. The main goal of this research is how does night work affect cortisol levels, is there a significant difference between regular workers and night shift workers. Salivary cortisol was measured 6 times a day in groups of non shift workers and night shift workers. For each collected saliva sample, the difference between sampling time and both times of waking up was calculated.Log transformed cortisol levels was put in linear model against the time with smooth functions as part of the linear predictor estimated smooth curves of cortisol for each level of the predictor (day shift, night shift) were estimated with smooth curves, and then the non-linear difference between cortisol curves over time was computed. Smooth curves and their difference is visualized. In the night shift group, there was a sharp increase in cortisol towards the end of the working day. The conclusion is, that In general, night shift workers had higher cortisol levels than day shift workers cortisol image Figuur 1 Cortisol smooth curves by shift and study day, as well as the differences between study days. Individual salivary cortisol levels (points) and estimated cortisol smooth curves (with 95% simultaneous CI) across time since waking up plotted by study group and study day for (A) non-shift workers on day shifts, (B) shift workers on day shifts, and (C) shift workers on night shifts. Estimated difference and 95% simultaneous CI between study days in (D) non-shift workers on day shifts, (E) shift workers on day shifts, (F) in shift workers on night shifts. The random effects were set to zero. In panels D, E and F, the grey area represents durations of no difference (CI for the estimated difference include zero) between the curves (study day 2 compared to study day 1) "],["reproducble-research.-part-2.html", "Chapter 7 Reproducble research. Part 2", " Chapter 7 Reproducble research. Part 2 Choose one of the papers used in this study. Or, using the OSF website, search for R code paper or for instance R code paper AND tags:(“COVID-19”) and select a project that involves a paper on anything (remotely) related to life sciences. Make sure you selected a project that has a dataset and R-code shared in the project environment. Have a look at the code. Describe in your own words what the code intents to achieve. In terms of readibility of the code, how would you grade (1(very bad)-5(very good)) the code available. Download the code and the data to a new RStudio project Run the script or code that is available to reproduce at least 1 figure When you encounter errors or flaws in the script, try fixing them and record your changes. Taken together on a scale from 1 (very hard) to 5 (very easy), how much effort did it take you to reproduce the visualization from the project, report or article Generate an RMarkdown script that contains the details on the project you selected, the code you used to create the visualization and your score for reproducibility. Gereral information Title : Interventions to improve oral vaccine performance in developing countries: a systematic review and meta-analysis This dataset contains a systematic review of vaccine performance in developing countries. The goal of this project is countering the spread of cholera, polio, rota virus in India, Pakistan, South Africa, and other developing countries with the help of a vaccine. The goal of the code is to visualize increase in diseases, dosis vaccination in countries. The purpose of this study is to identify which countries are under-vaccinated. Source: https://osf.io/bemw6/ Forest plot Funnel plot Egger’s test ## [1] &quot;Infants replicated across vaccines or vaccine effect significant, therefore separate tests performed&quot; ## [1] &quot;Cholera:&quot; ## [1] &quot;Insufficient studies (n&lt;3)&quot; ## [1] &quot;Rotavirus:&quot; ## ## Regression Test for Funnel Plot Asymmetry ## ## Model: mixed-effects meta-regression model ## Predictor: standard error ## ## Test for Funnel Plot Asymmetry: z = -1.7034, p = 0.0885 ## Limit Estimate (as sei -&gt; 0): b = 0.3711 (CI: -0.0290, 0.7713) ## ## [1] &quot;OPV3:&quot; ## [1] &quot;Insufficient studies (n&lt;3)&quot; Meta-analysis output ## ## Random-Effects Model (k = 9; tau^2 estimator: REML) ## ## logLik deviance AIC BIC AICc ## -0.6935 1.3870 5.3870 5.5459 7.7870 ## ## tau^2 (estimated amount of total heterogeneity): 0.0200 (SE = 0.0246) ## tau (square root of estimated tau^2 value): 0.1415 ## I^2 (total heterogeneity / total variability): 41.19% ## H^2 (total variability / sampling variability): 1.70 ## ## Test for Heterogeneity: ## Q(df = 8) = 15.0759, p-val = 0.0577 ## ## Model Results: ## ## estimate se zval pval ci.lb ci.ub ## 0.1125 0.0759 1.4809 0.1386 -0.0364 0.2613 ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Meta-regression output ## ## Mixed-Effects Model (k = 9; tau^2 estimator: REML) ## ## tau^2 (estimated amount of residual heterogeneity): 0.0000 (SE = 0.0152) ## tau (square root of estimated tau^2 value): 0.0011 ## I^2 (residual heterogeneity / unaccounted variability): 0.00% ## H^2 (unaccounted variability / sampling variability): 1.00 ## R^2 (amount of heterogeneity accounted for): 99.99% ## ## Test for Residual Heterogeneity: ## QE(df = 6) = 6.5822, p-val = 0.3612 ## ## Test of Moderators (coefficients 2:3): ## QM(df = 2) = 8.4932, p-val = 0.0143 ## ## Model Results: ## ## estimate se zval pval ci.lb ci.ub ## intrcpt 0.3023 0.2287 1.3217 0.1863 -0.1460 0.7505 ## VaccinePolio 0.1320 0.2603 0.5073 0.6119 -0.3781 0.6422 ## VaccineRotavirus -0.2613 0.2375 -1.1002 0.2712 -0.7268 0.2042 ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Intervention-specific outputs Summary of cholera studies ## [1] &quot;Insufficient studies (n&lt;2)&quot; Summary of rotavirus studies ## ## Random-Effects Model (k = 7; tau^2 estimator: REML) ## ## logLik deviance AIC BIC AICc ## 1.0133 -2.0266 1.9734 1.5569 5.9734 ## ## tau^2 (estimated amount of total heterogeneity): 0.0000 (SE = 0.0152) ## tau (square root of estimated tau^2 value): 0.0011 ## I^2 (total heterogeneity / total variability): 0.00% ## H^2 (total variability / sampling variability): 1.00 ## ## Test for Heterogeneity: ## Q(df = 6) = 6.5822, p-val = 0.3612 ## ## Model Results: ## ## estimate se zval pval ci.lb ci.ub ## 0.0410 0.0641 0.6397 0.5224 -0.0846 0.1665 ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Summary of PV3 studies ## [1] &quot;Insufficient studies (n&lt;2)&quot; Meta-regression: secondary moderators Age group ## [1] &quot;Residual heterogeneity not significant (p&gt;0.05)&quot; Income setting ## [1] &quot;Residual heterogeneity not significant (p&gt;0.05)&quot; Background immunogenicity (seroconversion rate in the control group) ## [1] &quot;Residual heterogeneity not significant (p&gt;0.05)&quot; OPV-specific analysis Forest plot Funnel plot Egger’s test Infants replicated across vaccines, therefore separate tests performed ## [1] &quot;OPV1:&quot; ## [1] &quot;Insufficient studies (n&lt;3)&quot; ## [1] &quot;OPV2:&quot; ## [1] &quot;Insufficient studies (n&lt;3)&quot; ## [1] &quot;OPV3:&quot; ## [1] &quot;Insufficient studies (n&lt;3)&quot; Meta-analysis output ## ## Multivariate Meta-Analysis Model (k = 3; method: REML) ## ## logLik Deviance AIC BIC AICc ## 1.5126 -3.0252 -1.0252 -2.3320 2.9748 ## ## Variance Components: ## ## estim sqrt nlvls fixed factor ## sigma^2 0.0000 0.0000 1 yes Reference ## ## Test for Heterogeneity: ## Q(df = 2) = 2.5696, p-val = 0.2767 ## ## Model Results: ## ## estimate se zval pval ci.lb ci.ub ## 0.2615 0.0508 5.1446 &lt;.0001 0.1619 0.3611 *** ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Meta-regression output ## ## Multivariate Meta-Analysis Model (k = 3; method: REML) ## ## Variance Components: ## ## estim sqrt nlvls fixed factor ## sigma^2 0.0000 0.0000 1 yes Reference ## ## Test for Residual Heterogeneity: ## QE(df = 0) = 0.0000, p-val = 1.0000 ## ## Test of Moderators (coefficients 2:3): ## QM(df = 2) = 2.5696, p-val = 0.2767 ## ## Model Results: ## ## estimate se zval pval ci.lb ci.ub ## intrcpt 0.2442 0.0659 3.7071 0.0002 0.1151 0.3732 *** ## Measure_of_SCOPV2 N-AB -0.0611 0.1234 -0.4953 0.6204 -0.3031 0.1808 ## Measure_of_SCOPV3 N-AB 0.1902 0.1406 1.3524 0.1763 -0.0854 0.4658 ## ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Serotype-specific outputs Summary of PV1 studies ## [1] &quot;Insufficient studies (n&lt;2)&quot; Summary of PV2 studies ## [1] &quot;Insufficient studies (n&lt;2)&quot; Summary of PV3 studies ## [1] &quot;Insufficient studies (n&lt;2)&quot; "],["working-with-relational-databases.html", "Chapter 8 Working with relational databases", " Chapter 8 Working with relational databases Portfolio assignment 7.Relational databases library(tidyverse) library(ggplot2) library(&quot;dslabs&quot;) Assignment Load the flu (in the github repo for this course: https://github.com/DataScienceILC/tlsc-dsfb26v-20_workflows go to ./data/flu_data.csv), the dengue (“./data/dengue_data.csv) and the gapminder ({dslabs} package) into three separate dataframes in R Check if they are in the right shape. Is the data in the ‘tidy’ format? If not change the format to ‘tidy’ Change the country and date variables of the three tables so that they coincide in terms of data type, class and values Store the three tables as separate (so six in total) .csv and .rds files. In Dbeaver create a new PostgreSQL database “workflowsdb” Using RPostgreSQL, insert the tables into the database. Inspect the contents of the tables with SQL (in DBeaver) and save the SQL script. Inspect the contents of the tables with dplyr (in R) and save a RMarkdown showing what you are doing. Load the gapminder data in R and change the dataframe in such as way that you could join it to dengue and flue. Save this clean gapminder data in the “workflowsdb” database Perform some joins (your choice) with SQL (can be done in DBeaver or with dplyr. Generate a joined table, and export this from the database to R. Show some descriptive statistics with this table, and at least 3 visualisations using ggplot2. Write a short report to show at least te actions listed in this assignment in a Rmd file for your portfolio. Include pictures and provide text explaining and showcasing your skills. read in Flu dataset flu &lt;- read.csv(&quot;data_raw/les5/flu_data.csv&quot;, skip=11) colnames(flu) ## [1] &quot;Date&quot; &quot;Argentina&quot; &quot;Australia&quot; &quot;Austria&quot; ## [5] &quot;Belgium&quot; &quot;Bolivia&quot; &quot;Brazil&quot; &quot;Bulgaria&quot; ## [9] &quot;Canada&quot; &quot;Chile&quot; &quot;France&quot; &quot;Germany&quot; ## [13] &quot;Hungary&quot; &quot;Japan&quot; &quot;Mexico&quot; &quot;Netherlands&quot; ## [17] &quot;New.Zealand&quot; &quot;Norway&quot; &quot;Paraguay&quot; &quot;Peru&quot; ## [21] &quot;Poland&quot; &quot;Romania&quot; &quot;Russia&quot; &quot;South.Africa&quot; ## [25] &quot;Spain&quot; &quot;Sweden&quot; &quot;Switzerland&quot; &quot;Ukraine&quot; ## [29] &quot;United.States&quot; &quot;Uruguay&quot; read in Dengue dataset dengue &lt;- read.csv(&quot;data_raw/les5/dengue_data.csv&quot;, skip=11) colnames(dengue) ## [1] &quot;Date&quot; &quot;Argentina&quot; &quot;Bolivia&quot; &quot;Brazil&quot; &quot;India&quot; ## [6] &quot;Indonesia&quot; &quot;Mexico&quot; &quot;Philippines&quot; &quot;Singapore&quot; &quot;Thailand&quot; ## [11] &quot;Venezuela&quot; Read in dslabs gapminder dataset library(&quot;dslabs&quot;) head(gapminder) ## country year infant_mortality life_expectancy fertility ## 1 Albania 1960 115.40 62.87 6.19 ## 2 Algeria 1960 148.20 47.50 7.65 ## 3 Angola 1960 208.00 35.98 7.32 ## 4 Antigua and Barbuda 1960 NA 62.97 4.43 ## 5 Argentina 1960 59.87 65.39 3.11 ## 6 Armenia 1960 NA 66.86 4.55 ## population gdp continent region ## 1 1636054 NA Europe Southern Europe ## 2 11124892 13828152297 Africa Northern Africa ## 3 5270844 NA Africa Middle Africa ## 4 54681 NA Americas Caribbean ## 5 20619075 108322326649 Americas South America ## 6 1867396 NA Asia Western Asia str(gapminder) ## &#39;data.frame&#39;: 10545 obs. of 9 variables: ## $ country : Factor w/ 185 levels &quot;Albania&quot;,&quot;Algeria&quot;,..: 1 2 3 4 5 6 7 8 9 10 ... ## $ year : int 1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ... ## $ infant_mortality: num 115.4 148.2 208 NA 59.9 ... ## $ life_expectancy : num 62.9 47.5 36 63 65.4 ... ## $ fertility : num 6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ... ## $ population : num 1636054 11124892 5270844 54681 20619075 ... ## $ gdp : num NA 1.38e+10 NA NA 1.08e+11 ... ## $ continent : Factor w/ 5 levels &quot;Africa&quot;,&quot;Americas&quot;,..: 4 1 1 2 2 3 2 5 4 3 ... ## $ region : Factor w/ 22 levels &quot;Australia and New Zealand&quot;,..: 19 11 10 2 15 21 2 1 22 21 ... Processing of FLU dataset flu_longer &lt;- pivot_longer(flu, cols= -Date, names_to = &quot;country&quot;, values_to =&quot;flu_cases&quot;, values_drop_na = TRUE) head(flu_longer) ## # A tibble: 6 × 3 ## Date country flu_cases ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 2002-12-29 Brazil 174 ## 2 2002-12-29 Peru 329 ## 3 2003-01-05 Brazil 162 ## 4 2003-01-05 Peru 315 ## 5 2003-01-12 Brazil 174 ## 6 2003-01-12 Chile 1 Fromat date, with year extraction flu_longer$Date &lt;- parse_integer( format(as.Date(flu_longer$Date), format=&quot;%Y&quot;) ) head(flu_longer$Date) ## [1] 2002 2002 2003 2003 2003 2003 head(flu_longer) ## # A tibble: 6 × 3 ## Date country flu_cases ## &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 2002 Brazil 174 ## 2 2002 Peru 329 ## 3 2003 Brazil 162 ## 4 2003 Peru 315 ## 5 2003 Brazil 174 ## 6 2003 Chile 1 Save unique rows flu_longer2 &lt;- flu_longer %&gt;% group_by(Date, country) %&gt;% mutate( sum_cases = sum(flu_cases)) #View(flu_longer2) head( flu_longer2) ## # A tibble: 6 × 4 ## # Groups: Date, country [5] ## Date country flu_cases sum_cases ## &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 2002 Brazil 174 174 ## 2 2002 Peru 329 329 ## 3 2003 Brazil 162 12386 ## 4 2003 Peru 315 20441 ## 5 2003 Brazil 174 12386 ## 6 2003 Chile 1 86 colnames( flu_longer2)[1] &lt;- &quot;year&quot; colnames(flu_longer2) ## [1] &quot;year&quot; &quot;country&quot; &quot;flu_cases&quot; &quot;sum_cases&quot; flu_longer_db &lt;- flu_longer2 %&gt;% select (year, country, sum_cases) %&gt;% unique() Processing of Dengue dataset dengue_longer &lt;- pivot_longer(dengue, cols = -Date, names_to = &quot;country&quot;, values_to = &quot;dengue_cases&quot;, values_drop_na = TRUE) head(dengue_longer) ## # A tibble: 6 × 3 ## Date country dengue_cases ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002-12-29 Bolivia 0.101 ## 2 2002-12-29 Brazil 0.073 ## 3 2002-12-29 India 0.062 ## 4 2002-12-29 Indonesia 0.101 ## 5 2002-12-29 Singapore 0.059 ## 6 2003-01-05 Bolivia 0.143 dengue_longer$Date &lt;- parse_integer( format(as.Date(dengue_longer$Date), format=&quot;%Y&quot;) ) head(dengue_longer) ## # A tibble: 6 × 3 ## Date country dengue_cases ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002 Bolivia 0.101 ## 2 2002 Brazil 0.073 ## 3 2002 India 0.062 ## 4 2002 Indonesia 0.101 ## 5 2002 Singapore 0.059 ## 6 2003 Bolivia 0.143 dengue_longer &lt;- dengue_longer %&gt;% group_by(country, Date) %&gt;% mutate(dengue_sum_cases = sum(dengue_cases)) head(dengue_longer) ## # A tibble: 6 × 4 ## # Groups: country, Date [6] ## Date country dengue_cases dengue_sum_cases ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2002 Bolivia 0.101 0.101 ## 2 2002 Brazil 0.073 0.073 ## 3 2002 India 0.062 0.062 ## 4 2002 Indonesia 0.101 0.101 ## 5 2002 Singapore 0.059 0.059 ## 6 2003 Bolivia 0.143 3.94 colnames(dengue_longer)[1] &lt;- &quot;year&quot; colnames(dengue_longer) ## [1] &quot;year&quot; &quot;country&quot; &quot;dengue_cases&quot; &quot;dengue_sum_cases&quot; dengue_db &lt;- dengue_longer %&gt;% select (year, country, dengue_sum_cases) %&gt;% unique() dengue_db ## # A tibble: 130 × 3 ## # Groups: country, year [130] ## year country dengue_sum_cases ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002 Bolivia 0.101 ## 2 2002 Brazil 0.073 ## 3 2002 India 0.062 ## 4 2002 Indonesia 0.101 ## 5 2002 Singapore 0.059 ## 6 2003 Bolivia 3.94 ## 7 2003 Brazil 4.34 ## 8 2003 India 8.86 ## 9 2003 Indonesia 3.15 ## 10 2003 Singapore 6.85 ## # ℹ 120 more rows export tables to csv and rds files write.csv(flu_longer_db, &quot;output/flu.csv&quot;) write.csv( dengue_db, &quot;output/ dengue.csv&quot;) write.csv( gapminder, &quot;output/gapminder.csv&quot;) saveRDS(flu_longer_db, &quot;output/flu.rds&quot;) saveRDS( dengue_db, &quot;output/dengue.rds&quot;) saveRDS(gapminder, &quot;output/gapminde.rds&quot;) Make connection to Postgres DB library(&#39;RPostgreSQL&#39;) ## Loading required package: DBI library(&quot;remotes&quot;) library(&quot;RPostgres&quot;) con &lt;- dbConnect(RPostgres::Postgres(), dbname = &quot;workflowsdb&quot;, host=&quot;localhost&quot;, port=&quot;5432&quot;, user=&quot;postgres&quot;, password=&quot;admin&quot;) write tables to DB dbWriteTable(con, &quot;flu&quot;,flu_longer_db) dbWriteTable(con, &quot;dengue&quot;, dengue_db) dbWriteTable(con, &quot;gapminder&quot;, gapminder) dbListTables(con) inspect the contents of the tables with SQL select * from flu limit 10; Table 8.1: Displaying records 1 - 10 year country sum_cases 2002 Brazil 174 2002 Peru 329 2003 Brazil 12386 2003 Peru 20441 2003 Chile 86 2003 Argentina 9352 2003 Romania 32769 2003 Bolivia 22563 2003 Uruguay 6445 2003 Austria 10178 select * from dengue limit 10; Table 8.2: Displaying records 1 - 10 year country dengue_sum_cases 2002 Bolivia 0.101 2002 Brazil 0.073 2002 India 0.062 2002 Indonesia 0.101 2002 Singapore 0.059 2003 Bolivia 3.945 2003 Brazil 4.344 2003 India 8.856 2003 Indonesia 3.147 2003 Singapore 6.854 Perform sql joins in DB: inner join flu and dengue: CREATE TABLE flu_joined_dengue AS SELECT dengue.country, dengue.year , flu.sum_cases, dengue.dengue_sum_cases from dengue join flu on dengue.year = flu.year and dengue.country = flu.country; select * from flu_joined_dengue limit 10; Table 8.3: Displaying records 1 - 10 country year sum_cases dengue_sum_cases Brazil 2002 174 0.073 Bolivia 2003 22563 3.945 Brazil 2003 12386 4.344 Mexico 2003 13233 4.414 Argentina 2003 9352 1.397 Argentina 2004 8843 1.533 Bolivia 2004 22110 1.465 Brazil 2004 12964 2.380 Mexico 2004 45978 3.832 Argentina 2005 8627 1.035 Left join on gapminder to combined flu-dengue select gapminder.country, gapminder.year, gapminder.infant_mortality , gapminder.life_expectancy , gapminder.continent, flu_joined_dengue.sum_cases ,flu_joined_dengue.dengue_sum_cases from gapminder left join flu_joined_dengue on flu_joined_dengue.year= gapminder.year and flu_joined_dengue.country =gapminder.country ; Table 8.4: Displaying records 1 - 10 country year infant_mortality life_expectancy continent sum_cases dengue_sum_cases Albania 1960 115.40 62.87 Europe NA NA Algeria 1960 148.20 47.50 Africa NA NA Angola 1960 208.00 35.98 Africa NA NA Antigua and Barbuda 1960 NA 62.97 Americas NA NA Argentina 1960 59.87 65.39 Americas NA NA Armenia 1960 NA 66.86 Asia NA NA Aruba 1960 NA 65.66 Americas NA NA Australia 1960 20.30 70.87 Oceania NA NA Austria 1960 37.30 68.75 Europe NA NA Azerbaijan 1960 NA 61.33 Asia NA NA Inspect data with R flu_db &lt;- tbl(con, &quot;flu&quot;) head(flu_db) ## # Source: SQL [6 x 3] ## # Database: postgres [postgres@localhost:5432/workflowsdb] ## year country sum_cases ## &lt;int&gt; &lt;chr&gt; &lt;int&gt; ## 1 2002 Brazil 174 ## 2 2002 Peru 329 ## 3 2003 Brazil 12386 ## 4 2003 Peru 20441 ## 5 2003 Chile 86 ## 6 2003 Argentina 9352 debgue_db &lt;- tbl(con, &quot;dengue&quot;) head(debgue_db) ## # Source: SQL [6 x 3] ## # Database: postgres [postgres@localhost:5432/workflowsdb] ## year country dengue_sum_cases ## &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 2002 Bolivia 0.101 ## 2 2002 Brazil 0.073 ## 3 2002 India 0.062 ## 4 2002 Indonesia 0.101 ## 5 2002 Singapore 0.059 ## 6 2003 Bolivia 3.94 gapminder_db &lt;- tbl(con, &quot;gapminder&quot;) head(gapminder_db) ## # Source: SQL [6 x 9] ## # Database: postgres [postgres@localhost:5432/workflowsdb] ## country year infant_mortality life_expectancy fertility population gdp ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Albania 1960 115. 62.9 6.19 1636054 NA ## 2 Algeria 1960 148. 47.5 7.65 11124892 1.38e10 ## 3 Angola 1960 208 36.0 7.32 5270844 NA ## 4 Antigua … 1960 NA 63.0 4.43 54681 NA ## 5 Argentina 1960 59.9 65.4 3.11 20619075 1.08e11 ## 6 Armenia 1960 NA 66.9 4.55 1867396 NA ## # ℹ 2 more variables: continent &lt;chr&gt;, region &lt;chr&gt; Descriptive statistics Join: flu and dengue” join2 &lt;- read.csv(&quot;data/les5/join2.csv&quot;) colnames(join2)[3] &lt;- &quot;cases_flu&quot; colnames(join2)[4] &lt;- &quot;cases_dengue&quot; head(join2) ## country year cases_flu cases_dengue ## 1 Brazil 2002 174 0.073 ## 2 Bolivia 2003 22563 3.945 ## 3 Brazil 2003 12386 4.344 ## 4 Mexico 2003 13233 4.414 ## 5 Argentina 2003 9352 1.397 ## 6 Argentina 2004 8843 1.533 join2 %&gt;% filter(country %in% c(&quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Argentina&quot;) ) %&gt;% ggplot(aes(x=year, y=cases_dengue, color=country)) + geom_line(size=2.5)+ labs(title = &quot;Comparing of dengue cases in Argentina, Bolivia and Brazil&quot; ) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 ## 3.4.0. ## ℹ Please use `linewidth` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this ## warning was generated. join2 %&gt;% filter(country %in% c(&quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Argentina&quot;) ) %&gt;% ggplot(aes(x=year, y=cases_flu, color=country)) + geom_line(size=2.5)+ labs(title = &quot;Comparing of flu cases in Argentina, Bolivia and Brazil&quot; ) summary_table &lt;- join2 %&gt;% group_by(country) %&gt;% summarise( max_flu=max(cases_flu), max_dengue=max(cases_dengue) ) join2_longer &lt;-join2 %&gt;% pivot_longer( cols = c(&quot;cases_flu&quot;,&quot;cases_dengue&quot;), names_to = &quot;group&quot;, values_to =&quot;cases&quot; ) head(join2_longer) ## # A tibble: 6 × 4 ## country year group cases ## &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Brazil 2002 cases_flu 174 ## 2 Brazil 2002 cases_dengue 0.073 ## 3 Bolivia 2003 cases_flu 22563 ## 4 Bolivia 2003 cases_dengue 3.94 ## 5 Brazil 2003 cases_flu 12386 ## 6 Brazil 2003 cases_dengue 4.34 # bar chart flu vs dengue summary_table &lt;- join2 %&gt;% group_by(country) %&gt;% summarise( max_flu=max(cases_flu), max_dengue=max(cases_dengue) ) summary_table ## # A tibble: 4 × 3 ## country max_flu max_dengue ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Argentina 10267 16.7 ## 2 Bolivia 22563 10.4 ## 3 Brazil 13964 12.5 ## 4 Mexico 70979 14.2 summary_table_polt &lt;- summary_table %&gt;% pivot_longer(cols=c(&#39;max_flu&#39;, &#39;max_dengue&#39;), names_to=&#39;max_flu_dengue&#39;, values_to=&#39;frequentie&#39;) head(summary_table_polt) ## # A tibble: 6 × 3 ## country max_flu_dengue frequentie ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Argentina max_flu 10267 ## 2 Argentina max_dengue 16.7 ## 3 Bolivia max_flu 22563 ## 4 Bolivia max_dengue 10.4 ## 5 Brazil max_flu 13964 ## 6 Brazil max_dengue 12.5 ggplot (summary_table_polt, aes(x= max_flu_dengue, y=log(frequentie), fill=country )) + geom_bar ( stat=&quot;identity&quot;, position = position_dodge(width = 0.5))+ labs(title=&quot;Maximum cases Flu and Dengue cases per country&quot;)+ ylab(&quot;Frequentie, log based &quot; )+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ geom_text(aes(label = frequentie), size = 3, vjust = -0.4,position = position_dodge(width = 1) ) ggplot (summary_table_polt, aes(x= country, y=log(frequentie), fill=max_flu_dengue )) + geom_bar ( stat=&quot;identity&quot;, position = position_dodge(width = 0.5))+ labs(title=&quot;Maximum cases Flu and Dengue per country&quot;)+ ylab(&quot;Frequentie, log based &quot; )+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ geom_text(aes(label = frequentie), size = 3, vjust = -0.4,position = position_dodge(width = 1) ) Maximum dengue cases in Argenitina is : 16.739 Maximum flu cases in Mexico is : 14.228 Maximum flu cases in Brazil is: 12.524 Maximum flu cases in Bolivia is :10.362 There are thousands of times more cases of flu than dengue in all existing areas Left join : gapminder and combined flu and dengue join1 &lt;- read.csv(&quot;data/les5/left_join_gapminder.csv&quot;) summary(join1) ## country year infant_mortality life_expectancy ## Length:10545 Min. :1960 Min. : 1.50 Min. :13.20 ## Class :character 1st Qu.:1974 1st Qu.: 16.00 1st Qu.:57.50 ## Mode :character Median :1988 Median : 41.50 Median :67.54 ## Mean :1988 Mean : 55.31 Mean :64.81 ## 3rd Qu.:2002 3rd Qu.: 85.10 3rd Qu.:73.00 ## Max. :2016 Max. :276.90 Max. :83.90 ## NA&#39;s :1453 ## continent sum_cases dengue_sum_cases ## Length:10545 Min. : 174 Min. : 0.073 ## Class :character 1st Qu.: 8676 1st Qu.: 1.513 ## Mode :character Median :11752 Median : 4.344 ## Mean :21412 Mean : 5.014 ## 3rd Qu.:22110 3rd Qu.: 7.848 ## Max. :70979 Max. :16.739 ## NA&#39;s :10492 NA&#39;s :10492 join1 %&gt;% ggplot(aes(x=log(sum_cases) , y=dengue_sum_cases, color=continent)) + geom_point()+ labs(title = &quot;Scatterplot of flu and dengue cases &quot;, y= &quot;flu cases, natural log&quot;, x=&quot;dengue cases&quot; ) ## Warning: Removed 10492 rows containing missing values or values outside ## the scale range (`geom_point()`). There is no positive or negative correlation between flu cases and dengue cases in all given countries (continent America ) Flu cases are several thousand times higher than dengue cases , with a maximum of 70,000 flue cases in Mexica. While the maximum number of dengue cases is 16, in Argentina "],["creating-r-packages.html", "Chapter 9 Creating R packages", " Chapter 9 Creating R packages Creating R packages Create your own package and publish it on Github To complete this portfolio assingment you need to perform the following steps: From your collection of RMarkdown files, collect 1 or a few that you know contain duplication of code (which should be fixed by writing a function). If there are already functions in your RMarkdown files, you can also select those Setup a new RStudio project with an R package (think about a cool name* - cannot included special character and spaces), linked to a github repo in your Github account Transfer the RMarkdown files that you selected in step 1 (and all their dependencies like data and scripts) to your new package (put them in the appropriate folders). Using what you have learnt so far (and what you can read from https://r-pkgs.org/index.html and https://emilyriederer.netlify.app/post/rmarkdown-driven-development/), transform your RMarkdown files into one R package. Publish the link to this package in your portfolio: *When choosing a name for a package, this quote from might help: “Side-note, if you are to create an R package, you need a name. It needs to be unique, especially if you plan on getting your package on CRAN. The {available} package can help you evaluate possible names to make sure they do not clash with other names and that they do not mean something rude.” We do not appreciate package names including offensive words Use this code to check the name you would like to use: library(available) available(“your_intended_package_name”) To pass this assignment, your new package should at least include: A properly formatted DESCRIPTION file, with all the fields including relevant information (so change the default values) 4 different functions that you wrote and with proper documentation, using roxygen2 comments A NAMESPACE file, generated with the command devtools::document() 1 Raw dataset that is documented and cleaned into a clean dataset. This clean dataset should be accessible inside your package. This means that if I install your package from Github, I would be able to call data(&lt;dataset_name&gt;, &lt;package_name&gt;) to load the cleaned dataset of interest in the Global Environment. One vignette that is accessible via the command browseVignettes(&lt;package_name&gt;) or vignette(&lt;package_name&gt;) The package installs from Github without errors when I run: devtools::install_github(&quot;account_name/package_name&quot;) link to package source code : Install package from github. View dataset library(&quot;devtools&quot;) ## Loading required package: usethis ## ## Attaching package: &#39;devtools&#39; ## The following objects are masked from &#39;package:remotes&#39;: ## ## dev_package_deps, install_bioc, install_bitbucket, install_cran, ## install_deps, install_dev, install_git, install_github, ## install_gitlab, install_local, install_svn, install_url, ## install_version, update_packages install_github(&quot;alenagrrr3/dscurve&quot;) ## Using GitHub PAT from the git credential store. ## Skipping install of &#39;dscurve&#39; from a github remote, the SHA1 (b0238546) has not changed since last install. ## Use `force = TRUE` to force installation library(dscurve) try(data(package = &quot;dscurve&quot;), silent = TRUE ) data(celegance) head(celegance) ## # A tibble: 6 × 34 ## plateRow plateColumn vialNr dropCode expType expReplicate expName ## &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 NA NA 1 a experiment 3 CE.LIQ.FLOW.062 ## 2 NA NA 1 b experiment 3 CE.LIQ.FLOW.062 ## 3 NA NA 1 c experiment 3 CE.LIQ.FLOW.062 ## 4 NA NA 1 d experiment 3 CE.LIQ.FLOW.062 ## 5 NA NA 1 e experiment 3 CE.LIQ.FLOW.062 ## 6 NA NA 2 a experiment 3 CE.LIQ.FLOW.062 ## # ℹ 27 more variables: expDate &lt;dttm&gt;, expResearcher &lt;chr&gt;, expTime &lt;dbl&gt;, ## # expUnit &lt;chr&gt;, expVolumeCounted &lt;dbl&gt;, RawData &lt;dbl&gt;, compCASRN &lt;chr&gt;, ## # compName &lt;chr&gt;, compConcentration &lt;dbl&gt;, compUnit &lt;chr&gt;, ## # compDelivery &lt;chr&gt;, compVehicle &lt;chr&gt;, elegansStrain &lt;chr&gt;, ## # elegansInput &lt;dbl&gt;, bacterialStrain &lt;chr&gt;, bacterialTreatment &lt;chr&gt;, ## # bacterialOD600 &lt;dbl&gt;, bacterialConcX &lt;dbl&gt;, bacterialVolume &lt;dbl&gt;, ## # bacterialVolUnit &lt;chr&gt;, incubationVial &lt;chr&gt;, incubationVolume &lt;dbl&gt;, … Vignettes browseVignettes(&quot;dscurve&quot;) "],["genvisr.html", "Chapter 10 GenVisR 10.1 Introduction to dataset 10.2 Implementation genVizR", " Chapter 10 GenVisR 10.1 Introduction to dataset The scientists conducted a genome-wide association study and found mutations in specific regions of the genome that correlate with educational attainment. Found mutations are responsible for only two percent of the variation in the level of education and cognitive ability, but include “promising” for further research single-nucleotide polymorphisms (single-nucleotide polymorphisms, SNPs). Specifically, three independent mutations (rs9320913, rs11584700, rs4851266) are responsible for approximately 1 additional month of learning each.(Rietveld et al., 2013). Studies were performed on data from Utah residents with Northern and Western European ancestry ((Rietveld et al., 2013)). Daset comes form Supplementary Materials for GWAS of 126,559 Individuals Identifies Genetic Variants Associated with Educational Attainment https://www.science.org/doi/abs/10.1126/science.1235488 (Appendix) The normal functioning of each cell depends on thousands of proteins that need to be to be in the right place at the right time. Sometimes mutations in genes prevent one or one or more proteins from working properly. By making a change in a gene, the mutation thereby changes the instructions for synthesizing the protein so that the protein no longer functions properly or is not synthesized at all.The sequence of a gene in DNA can be altered in several ways. Mutations in genes have different effects on health and depend on which genes they occurred in and whether the function of these proteins is altered. This type of Missense mutation is caused by the replacement of one DNA base for another (e.g., replacing T for C, or G for A), resulting in the substitution of one amino acid for another in the protein encoded by the gene. Here is one example of missene mutation from the study by Flint and Munafò(Rietveld et al., 2013). The mutation caused by the substitution of nucleotide A for G results in the substitution of amino acid Aspartic acid for Glutamic acid.This in turn changes the properties of the protein. As Whole-Genom scientists have shown the mutation rs1056667 is associated with cognitive performance (Erikson et al., 2016) Gene BTN1A1 is located on chromosome 6(Gene, n.d.).Some studies have shown that this chromosome is important in the development of normal intelligence(Chromosome 6 Ring - Symptoms, Causes, Treatment | NORD, n.d.). knitr::include_graphics(&quot;genVizR/img/Human_BTN1A1.png&quot;) Figure 10.1: Figure 2. Gene map BTN1A1 10.2 Implementation genVizR Genomic Visualization and Interpretations Introduction to genVizR genVizR is a package to interpret and visualize data received from NGS sequencing.There are many tools available for the analysis and visualization of these data. In this module we will focus on 3 functions : waterfall, genCov, and cnSpec. For the last module another dataset is used. The dataset for the spectrum plot comes from the GDC data portal, https://portal.gdc.cancer.gov/analysis_page?app=Downloads, file with name MATZO_p_TCGAb40_SNP_1N_GenomeWideSNP_6_E09_667812.grch38.seg.v2.txt. Waterfall plots The waterfall() function from the genVizR package displays mutation in a heatmap-like structure with rows and columns denotating genes and samples.The function creates a plot of the mutational landscape from original data. (Waterfall, n.d.) First of all, we need to load the genVizR library from bioconductor. We also need to load the mutation data. In the original dataset, only the gene name, mutation and position are present. We need to add some additional information from the Ensemble database, such as chromosome coordinates and gene annotation and to join this information to dataset.Output of this function is a heatmap with number (%) of SNP mutations per genes. In this dataset we encure Missense, Silent, Deletion and 3’-UTR mutation Install required libraries if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;GenVisR&quot;) library(GenVisR) library(data.table) library (tidyverse) library(biomaRt) library(tidyverse) Data preproccesing. First we save all gene names from article to the list. list_gen_names &lt;- c(&quot;AFF3&quot;,&quot;BTN1A1&quot;, &quot;H2AC6&quot;, &quot;HMGN4&quot;, &quot;MDM4&quot;, &quot;LRRN2&quot;, &quot;TANK&quot; ) list_ensemble &lt;- c(&quot;ENSG00000144218&quot;, &quot;ENSG00000124557&quot;,&quot;ENSG00000180573&quot;, &quot;ENSG00000182952&quot;, &quot;ENSG00000198625&quot;,&quot;ENSG00000170382&quot;, &quot;ENSG00000136560&quot;) Then we need to retrieve genomic coordinates and annotations for the further analyses. This is possible with biomaRt Bioconductor library ensembl &lt;- useMart(&quot;ensembl&quot;) ensembl &lt;- useDataset(&quot;hsapiens_gene_ensembl&quot;,mart=ensembl) object_results2 &lt;- getBM(attributes=c(&#39;ensembl_gene_id&#39;,&#39;chromosome_name&#39;, &#39;start_position&#39;, &#39;end_position&#39;,&#39;gene_biotype&#39;,&#39;hgnc_symbol&#39;), filters=&#39;hgnc_symbol&#39;, values=list_gen_names, mart=ensembl) Export Ensemble results to csv file. object_results2 write.csv(object_results2 ,&quot;data_raw/genViz/output_object_results_mart.csv&quot;) knitr::kable(object_results2, caption = &quot;The biomart results cotaining the gene coordinates&quot;) (#tab:biomart_results)The biomart results cotaining the gene coordinates ensembl_gene_id chromosome_name start_position end_position gene_biotype hgnc_symbol ENSG00000144218 2 99545419 100192428 protein_coding AFF3 ENSG00000292177 HSCHR6_1_CTG1 46483 56605 protein_coding BTN1A1 ENSG00000124557 6 26500303 26510425 protein_coding BTN1A1 ENSG00000180573 6 26124145 26139116 protein_coding H2AC6 ENSG00000292175 HSCHR6_1_CTG1 84546 93113 protein_coding HMGN4 ENSG00000182952 6 26538366 26546933 protein_coding HMGN4 ENSG00000170382 1 204617170 204685738 protein_coding LRRN2 ENSG00000198625 1 204516379 204558120 protein_coding MDM4 ENSG00000136560 2 161136908 161236230 protein_coding TANK biomart_export &lt;-read.csv(&quot;output/genViz/output_object_results_mart.csv&quot;) Join dataset export from biomart with list of genes/mutations. biomart_export &lt;- biomart_export[,-1] head( biomart_export) ## ensembl_gene_id chromosome_name start_position end_position gene_biotype ## 1 ENSG00000144218 2 99545419 100192428 protein_coding ## 2 ENSG00000292177 HSCHR6_1_CTG1 46483 56605 protein_coding ## 3 ENSG00000124557 6 26500303 26510425 protein_coding ## 4 ENSG00000180573 6 26124145 26139116 protein_coding ## 5 ENSG00000292175 HSCHR6_1_CTG1 84546 93113 protein_coding ## 6 ENSG00000182952 6 26538366 26546933 protein_coding ## hgnc_symbol ## 1 AFF3 ## 2 BTN1A1 ## 3 BTN1A1 ## 4 H2AC6 ## 5 HMGN4 ## 6 HMGN4 data_set_appendix&lt;-read.csv2(&quot;output/genViz/output_BTN1A2.csv&quot;) Make column names fit to join the ensemble dataset names(data_set_appendix)[names(data_set_appendix) == &#39;Hugo_Symbol&#39;] &lt;- &#39;hgnc_symbol&#39; names(data_set_appendix)[names(data_set_appendix) == &#39;X&#39;] &lt;- &#39;sample&#39; full_join &lt;- merge(data_set_appendix,biomart_export, by =&quot;hgnc_symbol&quot;) head(full_join) ## hgnc_symbol sample Variant_Classification Position ensembl_gene_id ## 1 AFF3 18 3UTR 99545644 ENSG00000144218 ## 2 AFF3 19 Missense_Mutation 99545817 ENSG00000144218 ## 3 AFF3 20 Missense_Mutation 99545812 ENSG00000144218 ## 4 AFF3 17 Missense_Mutation 99545531 ENSG00000144218 ## 5 BTN1A1 3 Missense_Mutation 26505362 ENSG00000292177 ## 6 BTN1A1 3 Missense_Mutation 26505362 ENSG00000124557 ## chromosome_name start_position end_position gene_biotype ## 1 2 99545419 100192428 protein_coding ## 2 2 99545419 100192428 protein_coding ## 3 2 99545419 100192428 protein_coding ## 4 2 99545419 100192428 protein_coding ## 5 HSCHR6_1_CTG1 46483 56605 protein_coding ## 6 6 26500303 26510425 protein_coding SNP mutation in the genome, such as single nucleotide variants, insertions, or deletions, play a significant role in the development of genetic diseases. Identifying and summarizing these variants is frequently the initial stage in forming hypotheses about how these events contribute to the development and advancement of diseases. The purpose of the waterfall function is to effectively consolidate small variant (SNVs/indels) data at a cohort level. It is usefull for gaining a comprehensive understanding of the types of variations seen in a group. Additionally, waterfall plots provide insight into the burden of mutations, genes that are frequently mutated, the mutual exclusivity or co-occurrence of genes, and the correlation between variants and clinical information. (Waterfall, n.d.) waterfall: function implementation on the chosen dataset myHierarchy &lt;- data.table(&quot;mutation&quot;=c(&quot;Missense_Mutation&quot;, &quot;Silent&quot;, &quot;3’UTR&quot;, &quot;DEL&quot;), color=c(&quot;#001ca4&quot;, &quot;#A8F5C2&quot;, &quot;#D69C4E&quot;, &quot;#F4CCD0&quot; ) ) colnames(full_join) ## [1] &quot;hgnc_symbol&quot; &quot;sample&quot; &quot;Variant_Classification&quot; ## [4] &quot;Position&quot; &quot;ensembl_gene_id&quot; &quot;chromosome_name&quot; ## [7] &quot;start_position&quot; &quot;end_position&quot; &quot;gene_biotype&quot; names(full_join)[names(full_join) == &#39;hgnc_symbol&#39;] &lt;- &#39;gene&#39; names(full_join)[names(full_join) == &#39;Variant_Classification&#39;] &lt;- &#39;mutation&#39; names(full_join)[names(full_join) == &#39;X&#39;] &lt;- &#39;sample&#39; full_join &lt;- full_join %&gt;% janitor :: clean_names() plotGenes=c(&quot;PIK3CA&quot;, &quot;TP53&quot;, &quot;USH2A&quot;, &quot;MLL3&quot;, &quot;BRCA1&quot;) plotData2 &lt;- Waterfall(full_join, mutationHierarchy = myHierarchy) drawPlot(plotData2) cnSpec Copy number spectrum plots generates sequencing data is the the determination of copy number gains and losses. The cnSpec() function, short for “copy number spectrum”, from the GenVisR package provides a view of copy number calls for a cohort of cases. Function cnSpec() requires parameters are a data frame with column names “chromosome”, “start”, “end”, “segmean”, “sample” and a reference assembly to the parameter genome.The data we will be working is gedownload from GDC database https://portal.gdc.cancer.gov/analysis_page?app=Downloads The output of this program consists of a file containing segmented copy number calls. The function gives a visualization of the sequencing dataset by sample by chromosome. Chromosomes are indicated in columns, samples in rows. Red color means too many copies of this gene, which means that these genes are carcinogenic. library(GenVisR) library(tidyverse) file_ngs_part1 &lt;- &quot;data_raw/genViz/MATZO_p_TCGAb40_SNP_1N_GenomeWideSNP_6_E09_667812.grch38.seg.v1.txt&quot; file_ngs_part2 &lt;- &quot;data_raw/genViz/MATZO_p_TCGAb40_SNP_1N_GenomeWideSNP_6_E09_667812.grch38.seg.v2.txt&quot; ngs_v1 &lt;- readr::read_delim(file_ngs_part1, delim = &quot;\\t&quot;) ngs_v2 &lt;- readr::read_delim(file_ngs_part2, delim = &quot;\\t&quot;) ngsv1.2 &lt;- rbind(ngs_v1,ngs_v2) head(ngsv1.2) ## # A tibble: 6 × 6 ## GDC_Aliquot Chromosome Start End Num_Probes Segment_Mean ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 3573fb47-be73-4d7c-a9c9-b0ba… 1 6.29e4 9.86e4 13 0.632 ## 2 3573fb47-be73-4d7c-a9c9-b0ba… 1 2.59e5 7.93e5 13 0.152 ## 3 3573fb47-be73-4d7c-a9c9-b0ba… 1 8.05e5 3.30e6 714 0.338 ## 4 3573fb47-be73-4d7c-a9c9-b0ba… 1 3.30e6 5.05e6 1321 0.0421 ## 5 3573fb47-be73-4d7c-a9c9-b0ba… 1 5.05e6 5.07e6 12 0.664 ## 6 3573fb47-be73-4d7c-a9c9-b0ba… 1 5.08e6 5.19e6 87 0.0681 colnames(ngsv1.2) &lt;- c(&quot;sample&quot;, &quot;chromosome&quot;, &quot;start&quot;, &quot;end&quot;, &quot;probes&quot;, &quot;segmean&quot;) ngsv1.2 &lt;- mutate(ngsv1.2, sample=str_sub(sample, start=32, end=36)) genomeBoundaries &lt;- aggregate(chromEnd ~ chrom, data=cytoGeno[cytoGeno$genome==&quot;hg38&quot;,], max) genomeBoundaries$chromStart &lt;- 0 colnames(genomeBoundaries) &lt;- c(&quot;chromosome&quot;, &quot;end&quot;, &quot;start&quot;) cnSpec(ngsv1.2, genome=&quot;hg38&quot;, CN_Loss_colour = &quot;#add8e6&quot;, CN_Gain_colour = &quot;#A30000&quot;, CNscale=&quot;relative&quot;, y=genomeBoundaries ) Gen cov Gencov is the function to view coverage of a specific region of the genome in the context of specific samples. This dataset contains coordinates of 2 gens, BTN1A1, BTN2A1 on the chromosome 6 and number their transcripts per coordinate.In this particular plot we can see, that BTN1A1 is more covered than BTN2A1. And we can see the region with hight and low GC content, the GC-content is higher in exons than in introns. The second segment of the plot with hight CG- content is exon. For this function we need BSgenome object. The BSgenome class is a container for storing the full genome sequences of a given organism. The coverage data for our experiment corresponds to the hg19 reference assembly. Libraries BSgenome.Hsapiens.UCSC.hg19 and TxDb.Hsapiens.UCSC.hg19.knownGene ares loaded. library(TxDb.Hsapiens.UCSC.hg19.knownGene) txdb &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene library(BSgenome.Hsapiens.UCSC.hg19) genome &lt;- BSgenome.Hsapiens.UCSC.hg19 library(BSgenome.Hsapiens.UCSC.hg19) library(TxDb.Hsapiens.UCSC.hg19.knownGene) url &lt;- &quot;data_raw/genViz/BTN1A1_cov_chr6.V1.txt&quot; covData &lt;- read.csv(url, sep=&quot;\\t&quot;, header=T) colnames(covData) &lt;- c(&quot;chromosome&quot;, &quot;start&quot;, &quot;end&quot;, &quot;BTN1A1&quot;, &quot;BTN2A1&quot;) # create a function to split the data frame into lists of data frames samples &lt;- c(&quot;BTN1A1&quot;, &quot;BTN2A1&quot;) a &lt;- function(x, y){ col_names &lt;- c(&quot;chromosome&quot;, &quot;end&quot;, x) y &lt;- y[,col_names] colnames(y) &lt;- c(&quot;chromosome&quot;, &quot;end&quot;, &quot;cov&quot;) return(y) } covData &lt;- lapply(samples, a, covData) names(covData) &lt;- samples genomeObject &lt;-BSgenome.Hsapiens.UCSC.hg19 TxDbObject &lt;- TxDb.Hsapiens.UCSC.hg19.knownGene chromosome &lt;- as.character(unique(covData[[1]]$chromosome)) start &lt;- as.numeric(min(covData[[1]]$end)) end &lt;- as.numeric(max(covData[[1]]$end)) grObject &lt;- GRanges(seqnames=c(&quot;chr6&quot;), ranges=IRanges(start=start, end=end)) genCov(x=covData, txdb=TxDbObject, gr=grObject, genome=genomeObject, cov_plotType=&quot;line&quot;, label_txtSize = 5) ## NULL Bibliography Chromosome 6 Ring - Symptoms, Causes, Treatment | NORD. (n.d.). Retrieved November 16, 2024, from https://rarediseases.org/rare-diseases/chromosome-6-ring/ Erikson, G. A., Bodian, D. L., Rueda, M., Molparia, B., Scott, E. R., Scott-Van Zeeland, A. A., Topol, S. E., Wineinger, N. E., Niederhuber, J. E., Topol, E. J., &amp; Torkamani, A. (2016). Whole-Genome Sequencing of a Healthy Aging Cohort. Cell, 165(4), 1002–1011. https://doi.org/10.1016/j.cell.2016.03.022 Gene: BTN1A1 (ENSG00000124557) - Summary - Homo_sapiens - Ensembl genome browser 113. (n.d.). Retrieved November 16, 2024, from https://www.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000124557;r=6:26500303-26510425 Rietveld, C. A., Medland, S. E., Derringer, J., Yang, J., Esko, T., Martin, N. W., Westra, H.-J., Shakhbazov, K., Abdellaoui, A., Agrawal, A., Albrecht, E., Alizadeh, B. Z., Amin, N., Barnard, J., Baumeister, S. E., Benke, K. S., Bielak, L. F., Boatman, J. A., Boyle, P. A., … Koellinger, P. D. (2013). GWAS of 126,559 Individuals Identifies Genetic Variants Associated with Educational Attainment. Science, 340(6139), 1467–1471. https://doi.org/10.1126/science.1235488 Waterfall: Function introduction. (n.d.). Retrieved November 16, 2024, from https://www.bioconductor.org/packages/devel/bioc/vignettes/GenVisR/inst/doc/waterfall_introduction.html "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
